generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgres"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model Artwork {
  ID     String   @id @db.Char(11)
  artist String   @db.VarChar(50)
  images String[] @db.VarChar(50)

  category     artworks_category
  sub_category String            @db.VarChar(50)
  name         String?           @db.VarChar(50)
  material     String?           @db.VarChar(50)
  technique    String?           @db.VarChar(50)
  style        String?           @db.VarChar(50)
  dimensions   String?           @db.VarChar(50)
  form         String?           @db.VarChar(50)
  size         String?           @db.VarChar(50)
  color        String?           @db.VarChar(50)
  stone_type   String?           @db.VarChar(50)
  statement    String?           @db.VarChar(300)
  sex          artworks_sex?
  model        String?           @db.VarChar(50)

  sell_price Decimal            @default(0.000000) @db.Decimal(20, 6)
  buy_price  Decimal            @default(0.000000) @db.Decimal(20, 6)
  inventory  Int                @default(0)
  location   artworks_location? @default(IR)

  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model User {
  id            String    @id @db.Char(15)
  email         String    @unique @db.VarChar(50)
  password_hash String    @db.VarChar(128)
  Session       Session[]

  first_name String? @db.VarChar(50)
  last_name  String? @db.VarChar(50)
  phone      String? @db.Char(11)
  sheba      String? @db.Char(24)
  percentage Decimal @default(35.000) @db.Decimal(6, 3)

  created_at DateTime  @default(now())
  updated_at DateTime? @default(now())
}

model Session {
  id     String @id
  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId String

  expiresAt DateTime
}

enum artworks_location {
  IR
  CA
}

enum artworks_category {
  style
  decor
}

enum artworks_sex {
  F
  U
  M
}
